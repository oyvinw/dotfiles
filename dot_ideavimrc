Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'vim-scripts/ReplaceWithRegister'
Plug 'justinmk/vim-sneak'
Plug 'vim-scripts/argtextobj.vim'
Plug 'preservim/nerdtree'

let g:s_next = 1

let mapleader = ' '

nmap <C-w>\| <Action>(MaximizeEditorInSplit)
nmap <C-w>= <Action>(MaximizeEditorInSplit)

nmap <C-w><Down> <Action>(StretchSplitToBottom)
nmap <C-w><Left> <Action>(StretchSplitToLeft)
nmap <C-w><Right> <Action>(StretchSplitToRight)
nmap <C-w><Up> <Action>(StretchSplitToTop)

nmap gi :action GotoImplementation<CR>
nmap gy :action GotoTypeDeclaration<CR>
nmap gu :action ShowUsages<CR>
nmap gt :action GotoTest<CR>
" nmap l :action g:NERDTreeMapActivateNode<CR>

map <Leader>b :action BuildSolutionAction<CR>
map <Leader>r :action Run<CR>
map <Leader>d :action Debug<CR>
map <Leader>s :action Stop<CR>
map <Leader>cp :action RiderManageRecentProjects<CR>

" nnoremap <leader>ff <cmd>Telescope find_files<cr>
map <leader>fe :action SearchEverywhere<CR>
map <leader>fg :action TextSearchAction<CR>
map <leader>ff :action GotoFile<CR>
map <leader>fc :action GotoClass<CR>
map <leader>fa :action GotoAction<CR>

" nnoremap <leader>fg <cmd>Telescope live_grep<cr>
" nnoremap <leader>fb <cmd>Telescope buffers<cr>
" nnoremap <leader>fh <cmd>Telescope help_tags<cr><CR

GoToFile
command! make :action BuildSolutionAction<CR>
command! run :action Run
command! debug :action Debug

inoremap <C-j> <Action>(PopupMenu-selectNext)
inoremap <C-k> <Action>(PopupMenu-selectPrev)

set clipboard+=unnamed
set scrolloff=10
set showmode
set showcmd
set visualbell

set ignorecase
set smartcase
set incsearch
set hlsearch

let g:NERDTreeMapActivateNode = 'l'
